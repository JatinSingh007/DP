from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf
# map(int,input().split())
# l = list(map(int,input().split()))
mod = 10**9 + 7
import sys
sys.setrecursionlimit(10**9)

n = int(input())
l = list(map(int,input().split()))
seti = set()
hash = defaultdict(int)
maxi = 0
for i in l:
    seti.add(i)
    hash[i]+=1
    maxi = max(maxi,hash[i])

la = sorted(seti)

dp = [[0] * (maxi+1) for _ in range(len(la) + 1)]
for i in range(1,maxi+1):
    dp[0][i] = min(i,hash[la[0]])

for i in range(1,len(la)):
    for j in range(1,maxi+1):

        if j>hash[la[i]]:
            dp[i][j] = max(dp[i][j-1],dp[i-1][j])
        else:
            dp[i][j] = dp[i-1][j-1]+j

ans = 0
for i in range(maxi+1):
    ans = max(ans,dp[len(la)-1][i])

print(ans)
