from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf
# map(int,input().split())
# l = list(map(int,input().split()))
mod = 10**9 + 9
import sys
sys.setrecursionlimit(10**9)

s1,s2 = map(str,input().split())
n = len(s1)
q = int(input())

dp1 = []
dp2 = []
for i in range(n+1):
    ka1 = [0]*(n+1)
    ka2 = [0]*(n+1)
    dp1.append(ka1)
    dp2.append(ka2)

for i in range(n):
    if s1[i] == '0':
        dp1[i][i] = 0
        dp2[i][i] = 1
    else:
        dp1[i][i] = 1
        dp2[i][i] = 0


for gap in range(1,n):
    i = 0
    for j in range(gap,n):
        dp1[i][j] = dp2[i][j] = 0
        for g in range(gap):

            k = i+g

            tik = dp1[i][k] + dp2[i][k]
            tkj = dp1[k+1][j] + dp2[k+1][j]

            if s2[k] == 'a':
                dp1[i][j] = dp1[i][j]%mod+(dp1[i][k]%mod*dp1[k+1][j]%mod)%mod
                dp1[i][j]%=mod
                dp2[i][j] = dp2[i][j]%mod+(tik%mod*tkj%mod)%mod - (dp1[i][k]%mod*dp1[k+1][j]%mod)%mod
                dp2[i][j]%=mod
            elif s2[k] == 'o':
                dp2[i][j] =dp2[i][j]%mod + (dp2[i][k]%mod*dp2[k+1][j]%mod)%mod
                dp2[i][j]%=mod
                dp1[i][j] = dp1[i][j]%mod+(tik%mod*tkj%mod)%mod - (dp2[i][k]%mod)*(dp2[k+1][j]%mod)%mod
                dp1[i][j]%=mod

            else:
                dp1[i][j] = dp1[i][j]%mod+(dp1[i][k]%mod*dp2[k+1][j]%mod)%mod + (dp1[k+1][j]%mod*dp2[i][k]%mod)%mod
                dp1[i][j]%=mod
                dp2[i][j] = dp2[i][j]%mod+(dp1[i][k]%mod*dp1[k+1][j]%mod)%mod + (dp2[k+1][j]%mod*dp2[i][k]%mod)%mod
                dp2[i][j]%=mod
        i+=1

for i in range(q):
    a,b,c = map(str,input().split())
    a,b = int(a),int(b)
    a-=1
    b-=1
    if c == 'true':
        print(dp1[a][b])
    else:
        print(dp2[a][b])
