from sys import stdin
from collections import deque
mod = 10**9 + 7
import sys
# def rl():
#     return [int(w) for w in stdin.readline().split()]
from bisect import bisect_right
from bisect import bisect_left
from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil
# map(int,input().split())
# # l = list(map(int,input().split()))
# from itertools import permutations
import heapq

# la = []

def mod_inverse(b,m):
    g = gcd(b,m)
    if g!=1:
        return -1

    else:
        return pow(b,m-2,m)




def ncr(n = 10**3):
    dp = []



    for i in range(n+1):
        ka = [0]*(10**3+1)
        ka[0] = 1
        dp.append(ka)
    
    


    for i in range(1,n+1):
        for j in range(i+1):
            if j == 0:
                dp[i][j] = 1
            else:
             dp[i][j] = dp[i-1][j-1]%mod + dp[i-1][j]%mod
             dp[i][j]%=mod

    for i in range(1,n+1):
        for j in range(i+1,n+1):
            dp[i][j] = (i*j)%mod


    for i in range(n+1):
        for j in range(1,n+1):

                z = dp[i][j]
              
                dp[i][j] = dp[i][j-1]%mod * z%mod
                dp[i][j]%=mod




    return dp


dp = ncr()

# print(dp[5][6])
q = int(sys.stdin.readline().strip())

for i in range(q):

    a,b,c,d = map(int,input().split())
    ans = 0
    for i in range(a,b+1):
     z = dp[i][d]
     if c>0:
      
      z2 = dp[i][c-1]
      z = (z*mod_inverse(z2,mod))%mod

     
     ans = (ans%mod + z%mod)%mod
     ans%=mod
    print(ans%mod)





