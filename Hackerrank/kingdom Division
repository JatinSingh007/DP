import sys

sys.setrecursionlimit(10**5)

m = 10**9 + 7
def dfs1(node):

    bool[node] = True


    for i in hash[node]:
        if bool[i] == False:
            par[i] = node
            dfs1(i)

def dfs2(node):
    bool[node] = True

    if len(hash[node]) == 1 and par[node]!=node:

        B[node] = 1
        G[node] = 0
        return

    for i in hash[node]:


        if G[i] == -1 and bool[i] == False:
            dfs2(i)

    B[node] = 1
    G[node] = 1

    for i in hash[node]:
      if i!=par[node]:
        B[node]*= G[i]%m
        G[node]*=(2*G[i]%m+B[i]%m)%m
        B[node] = B[node]%m
        G[node] = G[node]%m
    G[node]-=B[node]

    while G[node]<0:
        G[node]+=m


from collections import defaultdict


n = int(input())

hash = defaultdict(list)

for i in range(n-1):
    a,b = map(int,input().split())
    hash[a].append(b)
    hash[b].append(a)
bool = [False]*(n+1)
par = [0]+[i+1 for i in range(n)]

G = [-1]*(n+1)
B = [-1]*(n+1)

dfs1(1)

bool = [False]*(n+1)

dfs2(1)

print(2*G[1] % m)

